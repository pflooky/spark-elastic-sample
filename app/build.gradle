/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Scala application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the scala Plugin to add support for Scala.
    id 'scala'

    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation "org.scala-lang:scala-library:$scalaVersion"

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1-jre'

    // Spark S3
    implementation "org.apache.spark:spark-core_$scalaMajorVersion:3.1.2"
    implementation "org.apache.spark:spark-sql_$scalaMajorVersion:3.1.2"
    implementation "org.apache.hadoop:hadoop-aws:$hadoopVersion"
    implementation "org.apache.hadoop:hadoop-common:$hadoopVersion"
    implementation "org.elasticsearch:elasticsearch-spark-30_$scalaMajorVersion:$hadoopElasticVersion"

    // Log4j
    implementation "org.apache.logging.log4j:log4j-api:$log4jVersion"
    implementation "org.apache.logging.log4j:log4j-core:$log4jVersion"

    // Use Scalatest for testing our library
    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.scalatest:scalatest_$scalaMajorVersion:3.2.6"
    testImplementation "org.scalatestplus:junit-4-13_$scalaMajorVersion:3.2.2.0"

    // Need scala-xml at test runtime
    testRuntimeOnly "org.scala-lang.modules:scala-xml_$scalaMajorVersion:1.2.0"
}

application {
    // Define the main class for the application.
    mainClass = 'spark.elastic.sample.App'
}
